<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo+next增加不蒜子统计功能</title>
    <url>/2019/11/27/2019-11-27-hexo-add-busuanzi/</url>
    <content><![CDATA[<p>hexo增加不蒜子统计页面访问量、访问人数、及阅读数</p>
<a id="more"></a>
<p>编辑主题配置文件 <code>themes/*/_config.yml</code> 中的 <code>busuanzi_count</code>的配置项。<br>当enable: true时，代表开启全局开启。<br>若site_uv（本站访客数）、site_pv（本站访客数）、page_pv（本文总阅读量）的值均为false时，不蒜子仅作记录而不会在页面上显示。<br>我使用的是nextV7.5.0版本，该版本<code>\layout\_third-party\analytics</code>下没有<code>busuanzi-counter.swig</code>文件，而在<code>\layout\_third-party\statistics</code>目录下，复制粘贴到<code>analytics</code>目录下即可。<br>当你使用了<code>live2Dmod</code>在页面上时，不蒜子不能正常显示。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo busuanzi</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+next使用Valine评论系统</title>
    <url>/2019/11/27/2019-11-27-hexo-add-valine/</url>
    <content><![CDATA[<p>hexo+next使用Valine评论系统</p>
<a id="more"></a>
<ol>
<li>获取<code>APP ID</code> 和 <code>APP Key</code><br>登录或注册 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> , 进入控制台后点击左下角创建应用，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了</li>
<li>打开_config.yml主题配置文件，搜索valine，填写<code>APP ID</code> 和 <code>APP Key</code>到对应位置。</li>
<li>在<code>LeanCloud</code> -&gt; <code>存储</code> -&gt; <code>创建Class</code> -&gt; <code>无限制的Class</code>，创建class名称为：Comment</li>
<li>在<code>LeanCloud</code> -&gt; <code>设置</code> -&gt; <code>安全中心</code>，把除<code>数据存储</code>外其他选项都关闭。</li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo valine</tag>
      </tags>
  </entry>
  <entry>
    <title>修改文章tag标签的样式</title>
    <url>/2019/11/27/2019-11-27-hexo-change-tag-style/</url>
    <content><![CDATA[<p>修改文章tag标签的样式及文章底部添加本文结束标志</p>
<a id="more"></a>
<h3 id="修改tag样式"><a href="#修改tag样式" class="headerlink" title="修改tag样式"></a>修改tag样式</h3><p>打开<code>next/_config.yml</code>文件，查找<code>tag_icon: false</code>改为true即可</p>
<h3 id="添加结束标志"><a href="#添加结束标志" class="headerlink" title="添加结束标志"></a>添加结束标志</h3><p>打开编辑<code>themes\next\layout\_macro\post.swig</code>，在文章结束的地方添加如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span><br><span class="line">        ---------本文已结束---------</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo tag样式</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo生成博文插入图片</title>
    <url>/2019/11/27/2019-11-27-hexo-blog-add-image/</url>
    <content><![CDATA[<p>hexo生成博文插入图片</p>
<a id="more"></a>
<ol>
<li>把主页配置文件<code>_config.yml</code>里的<code>post_asset_folder:false</code>这个选项设置为<code>true</code></li>
<li>安装插件,这是下载安装一个可以上传本地图片的插件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image -- save–save</span><br></pre></td></tr></table></figure></li>
<li>安装完成后，再运行<code>hexo n “title”</code>来生成md博文时，<br><code>/source/_posts</code>文件夹内除了<code>title.md</code>文件还有一个同名的文件夹<code>title</code>，<br>将你想在博文中插入的照片放到这个同名文件夹中即可。</li>
<li>插入图片只需要在想添加的位置写入以下形式，如<code>![图片1](1.png)</code>即可<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">![图片不能显示时的的替代文字](图片名字.图片格式)</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo插入图片</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo下valine评论系统报410错</title>
    <url>/2019/11/27/2019-11-27-valine-410-post-error/</url>
    <content><![CDATA[<p>hexo下的next主题安装的valine评论系统报以下错误：</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Code : undefined [410 POST https://avoscloud.com/1.1/classes/Comment]`</span><br></pre></td></tr></table></figure>

<p>一开始他是这样的<br><img src="/2019/11/27/2019-11-27-valine-410-post-error/error410.png" alt="410错误"><br>然后我再网上百度了一些解答，<a href="https://laytonsun.com/learning/2019-08/enable-comments.html" target="_blank" rel="noopener">有说是leancloud地区问题</a>的，<a href="https://www.jianshu.com/p/f4658df66a15" target="_blank" rel="noopener">也有说是版本之间一些参数的问题</a>，我检查一下我的发现都不是这些问题,</p>
<p>然后打开 <code>/next/_config.yml</code>主题配置文件看到了代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment"># When enable is set to be true</span></span><br><span class="line">  appid: 我的appid<span class="comment"># Your leancloud application appid</span></span><br><span class="line">  appkey: 我的appkey<span class="comment"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure>
<p>它在编辑器里是这样显示的<br><img src="/2019/11/27/2019-11-27-valine-410-post-error/config.png" alt="410错误"><br>可以看到<code>enable: true</code>中的颜色根本没有改变，于是我把#及后面的注释换行，然后就高亮显示了，在运行一下，成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> </span><br><span class="line">  <span class="comment"># When enable is set to be true</span></span><br><span class="line">  appid: 我的appid</span><br><span class="line">  <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  appkey: 我的appkey</span><br><span class="line">  <span class="comment"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo valine410错误</tag>
      </tags>
  </entry>
  <entry>
    <title>next主题如何添加动态背景canvas_nest</title>
    <url>/2019/11/27/2019-11-27-add-background-canvas-nest/</url>
    <content><![CDATA[<p>hexo next主题下怎么添加canvas_nest背景</p>
<a id="more"></a>
<p>我的hexo next是V7.5.0版本</p>
<ol>
<li>修改主题配置文件<br>打开 <code>/next/_config.yml</code>，<code>Ctrl+f</code>找到<code>Canvas-nest</code>，将<code>enable</code>改为<code>true</code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
接下来有两种方法：<br>方法一：修改布局文件<br>打开 <code>next/layout/_layout.swig</code>，在<code>&lt;body&gt;&lt;/body&gt;</code>标签内添加以下代码<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span></span><br><span class="line"> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
方法二：下载插件<code>canvas-nest</code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">themes/next-v7.5.0/<span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>
然后运行以下代码重新构建<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo动态背景</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo右下角添加2d动画模型</title>
    <url>/2019/11/27/2019-11-27-add-live2dDemo/</url>
    <content><![CDATA[<p>hexo右下角添加2d动画模型</p>
<a id="more"></a>
<ol>
<li>安装插件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li>
<li>选择你喜欢的模型名字<br>在GitHub上<a href="https://github.com/summerscar/live2dDemo" target="_blank" rel="noopener">live2dDemo</a>有很多，可以选择里面的模型</li>
<li>将以下代码添加到主题配置文件_config.yml末尾，修改&lt;你喜欢的模型名字&gt;（如：z16）：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  scriptFrom: <span class="built_in">local</span></span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="literal">false</span></span><br><span class="line">  <span class="built_in">log</span>: <span class="literal">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-&lt;你喜欢的模型名字&gt;</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li>建配置文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">在站点目录下建文件夹live2d_models，</span><br><span class="line">再在live2d_models下建文件夹&lt;你喜欢的模型名字&gt;,</span><br><span class="line">再在&lt;你喜欢的模型名字&gt;下建json文件：&lt;你喜欢的模型名字&gt;.model.json</span><br></pre></td></tr></table></figure></li>
<li>安装模型<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save live2d-widget-model-&lt;你喜欢的模型名字&gt;</span><br></pre></td></tr></table></figure></li>
<li>运行以下命令， 在<code>http://localhost:4000/</code>查看测试结果<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo添加live2dDemo</tag>
      </tags>
  </entry>
  <entry>
    <title>git bash每次运行hexo d都要输入密码的解决办法</title>
    <url>/2019/11/27/2019-11-27-hexo-no-password/</url>
    <content><![CDATA[<p>每次运行hexo d都要输入密码的解决办法</p>
<a id="more"></a>
<p>尝试了网上的一些其他教程，都没有起作用，如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span> `ssh-agent` </span><br><span class="line">ssh-add</span><br></pre></td></tr></table></figure>
<p>后来参考另一个解决方案：删除掉之前的passphrase密码就可以了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -p </span><br><span class="line"> 先确认旧密码</span><br><span class="line"> 当提示你输入新的密码的时候，直接两下enter就可以了</span><br></pre></td></tr></table></figure>
<p>另外还有一个<a href="https://www.jianshu.com/p/efaf72aab32e" target="_blank" rel="noopener">解决方案</a>：直接将你账号密码写在上传地址中,这样就不用每次更新都输入你的账号密码了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">例如你的账号为: account,密码为 <span class="built_in">pwd</span>;</span><br><span class="line">那你的repo填写为下面这样即可</span><br><span class="line">github: https://account:<span class="built_in">pwd</span>@github.com/account/account.github.io.git</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo d去掉密码</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo配置404界面</title>
    <url>/2019/11/26/2019-11-26-hexo-add-404page/</url>
    <content><![CDATA[<p>本文主要讲解hexo下的404界面配置</p>
<a id="more"></a>
<p>hexo托管于GitHub，所以404界面可以通过本地仓库添加到你的master分支的根目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line"> git commit -a -m<span class="string">"404"</span></span><br><span class="line"> git push origin master</span><br></pre></td></tr></table></figure>
<p>但当你再次部署hexo的时候，github上面的404页面又被删除了，因为每次执行<code>hexo d</code>的时候，都是把hexo\public目录下的文件上传到GitHub，而在你本地的文件夹内并没有这个文件，所以一同步就没了。</p>
<!--more-->
<p>而如果将404.html直接放在根目录的source文件夹下，在编译的时候会改变文本内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo\<span class="built_in">source</span>\404.html</span><br></pre></td></tr></table></figure>
<p>所以改为放在你配置的主题文件夹下的source文件夹内，如果有css文件则放在同级css文件夹下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo\themes\next\<span class="built_in">source</span>\404.html</span><br><span class="line">hexo\themes\next\<span class="built_in">source</span>\css\404.css</span><br></pre></td></tr></table></figure>
<p>这样在编译的时候会直接生成到public下,可以保持原本的内容直接被放到和index.html文件同级的public根目录下.</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo404界面</tag>
      </tags>
  </entry>
  <entry>
    <title>git的基本命令</title>
    <url>/2019/11/26/2019-11-26-basic-command-of-git/</url>
    <content><![CDATA[<p>本文主要讲解一些git的基本操作语句的使用</p>
<a id="more"></a>
<h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init                <span class="comment">#初始化仓库</span></span><br><span class="line">git add readme.md       <span class="comment">#添加文件</span></span><br><span class="line">git status              <span class="comment">#查看文件状态（是否更改）</span></span><br><span class="line">git add .               <span class="comment">#把所有要提交的修改放到暂存区</span></span><br><span class="line">git commit -a -m <span class="string">"注释"</span> <span class="comment">#给所有变更的文件添加注释</span></span><br></pre></td></tr></table></figure>

<p>推送分支:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin master  <span class="comment">#本地同步到远程仓库</span></span><br></pre></td></tr></table></figure>
<p>远程分支同步到本地:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin master  <span class="comment">#远程仓库同步到本地</span></span><br></pre></td></tr></table></figure>
<h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><p>查看当前分支:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> git branch</span><br><span class="line">* master</span><br></pre></td></tr></table></figure>
<p>创建dev分支，然后切换到dev分支:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure>
<p>git checkout命令加上-b参数表示创建并切换，相当于以下两条命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch dev          <span class="comment"># 创建分支</span></span><br><span class="line">git checkout dev        <span class="comment"># 切换分支</span></span><br></pre></td></tr></table></figure>
<p>合并分支,git merge命令用于合并指定分支到当前分支：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure>
<p>删除分支:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git bash基本命令</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建hexo博客</title>
    <url>/2019/11/26/2019-11-26-build-a-hexo-blog/</url>
    <content><![CDATA[<p>搭建hexo博客</p>
<a id="more"></a>
<h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><ol>
<li><p><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>下载安装</p>
</li>
<li><p><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>下载安装</p>
</li>
<li><p>安装hexo，在git bash运行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li>
<li><p>初始化Hexo，git bash依次运行以下命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动服务器，输入以下命令，运行即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li>
<li><p>浏览器访问网址:<code>http://localhost:4000/</code>，这时候你就可以看到自己的博客了</p>
</li>
</ol>
<h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><ol>
<li><p>创建GitHubpages</p>
</li>
<li><p>添加SSH key，在git bash运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱地址"</span></span><br></pre></td></tr></table></figure>
<p>注意在需要你输入密码的时候可以回车忽略，不然每次发布到GitHub上都需要输入密码，很麻烦</p>
</li>
<li><p>修改站点目录下的<code>_config.yml</code>文件，文件末尾添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>注意在每一个冒号后面都加上空格，不然会报错</p>
</li>
<li><p>推送到GithubPages。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li>
<li><p>浏览器访问<code>https://&lt;Github账号名称&gt;.github.io/</code>这时候你就可以看到自己的博客运行在GitHub上了</p>
</li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo搭建</tag>
      </tags>
  </entry>
</search>
